<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>milan-sample-aws-exec</artifactId>
    <version>0.8-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <description>Project Milan - language, infrastructure, and tools for data-first systems.</description>
    <inceptionYear>2019</inceptionYear>
    <packaging>jar</packaging>

    <parent>
        <groupId>com.amazon.milan</groupId>
        <artifactId>milan-samples-aws</artifactId>
        <version>0.8-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.amazon.milan</groupId>
            <artifactId>milan-typeutil</artifactId>
            <version>${milan.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazon.milan</groupId>
            <artifactId>milan-lang</artifactId>
            <version>${milan.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazon.milan</groupId>
            <artifactId>milan-tools</artifactId>
            <version>${milan.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazon.milan</groupId>
            <artifactId>milan-scala-compiler</artifactId>
            <version>${milan.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazon.milan</groupId>
            <artifactId>milan-aws-serverless</artifactId>
            <version>${milan.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazon.milan</groupId>
            <artifactId>milan-sample-aws-gen</artifactId>
            <version>${milan.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${scala.compat.version}</artifactId>
            <version>${scala.logging.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- AWS -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>dynamodb</artifactId>
            <version>${aws.sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-events</artifactId>
            <version>3.11.0</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.27.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>Stateless</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <mainClass>com.amazon.milan.tools.CompileApplicationInstance</mainClass>
                            <arguments>
                                <argument>--provider</argument>
                                <argument>com.amazon.milan.samples.aws.StatelessSample</argument>
                                <argument>--compiler</argument>
                                <argument>aws_lambda</argument>
                                <argument>-Cpackage=com.amazon.milan.samples.aws.exec</argument>
                                <argument>-Cclass=StatelessSample</argument>
                                <argument>-Cpartition=false</argument>
                                <argument>-Ccode=${project.build.directory}/${project.artifactId}-${project.version}.jar</argument>
                                <argument>-Oscala=${project.basedir}/src/main/scala/generated</argument>
                                <argument>-Ocdk=${project.basedir}/cdk/lib/generated</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Sqs</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <mainClass>com.amazon.milan.tools.CompileApplicationInstance</mainClass>
                            <arguments>
                                <argument>--provider</argument>
                                <argument>com.amazon.milan.samples.aws.SqsSample</argument>
                                <argument>--compiler</argument>
                                <argument>aws_lambda</argument>
                                <argument>-Cpackage=com.amazon.milan.samples.aws.exec</argument>
                                <argument>-Cclass=SqsSample</argument>
                                <argument>-Cpartition=false</argument>
                                <argument>-Ccode=${project.build.directory}/${project.artifactId}-${project.version}.jar</argument>
                                <argument>-Oscala=${project.basedir}/src/main/scala/generated</argument>
                                <argument>-Ocdk=${project.basedir}/cdk/lib/generated</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Partition</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <mainClass>com.amazon.milan.tools.CompileApplicationInstance</mainClass>
                            <arguments>
                                <argument>--provider</argument>
                                <argument>com.amazon.milan.samples.aws.PartitionSample</argument>
                                <argument>--compiler</argument>
                                <argument>aws_lambda</argument>
                                <argument>-Cpackage=com.amazon.milan.samples.aws.exec</argument>
                                <argument>-Cclass=PartitionSample</argument>
                                <argument>-Cpartition=true</argument>
                                <argument>-Ccode=${project.build.directory}/${project.artifactId}-${project.version}.jar</argument>
                                <argument>-Oscala=${project.basedir}/src/main/scala/generated</argument>
                                <argument>-Ocdk=${project.basedir}/cdk/lib/generated</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- see http://davidb.github.com/scala-maven-plugin -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.2.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <args>
                                <arg>-dependencyfile</arg>
                                <arg>${project.build.directory}/.scala_dependencies</arg>
                                <arg>-feature</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                </configuration>
            </plugin>
            <plugin>
                <!-- This step is needed in order to build dependency packages successfully -->
                <!-- It installs Milan jar in user's local Maven repo -->
                <!-- It is only invoked if "mvn <...> install" is executed -->
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <configuration>
                    <!-- put your configurations here -->
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
